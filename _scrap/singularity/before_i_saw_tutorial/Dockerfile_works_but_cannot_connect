Bootstrap: docker
From: ubuntu:20.04

%post
################################################################################# Append custom content to .bashrc using heredoc
if [ ! -f /root/.bashrc ]; then
touch /root/.bashrc
fi

cat <<'EOF' >> /root/.bashrc
# Source global definitions
if [ -f /etc/bash.bashrc ]; then
. /etc/bash.bashrc
fi

# Customize the PS1 prompt
export PS1="\[\e[32m\]\u@\h:\w\$\[\e[0m\] "

# Other settings
# Set history to append rather than overwrite
shopt -s histappend
# Check window size after each command and update LINES and COLUMNS
shopt -s checkwinsize

# History configuration
HISTSIZE=1000
HISTFILESIZE=2000

# User specific aliases and functions

# Enable color support for ls and grep
if [ -x /usr/bin/dircolors ]; then
eval "\$(dircolors -b)"
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
fi

alias ll='ls -la'
alias la='ls -A'
alias l='ls -CF'
alias conda='mamba'

clear
EOF
################################################################################# END DEFINITION OF BASHRC

# Set proxy for the environment
export HTTPS_PROXY="http://www-cache.gwdg.de:3128"
export HTTP_PROXY="http://www-cache.gwdg.de:3128"

# Ensure wget uses the proxy by setting it explicitly in the environment
export http_proxy="http://www-cache.gwdg.de:3128"
export https_proxy="http://www-cache.gwdg.de:3128"

# Set proxy for apt directly in its config file
echo 'Acquire::http::Proxy "http://www-cache.gwdg.de:3128";' > /etc/apt/apt.conf
echo 'Acquire::https::Proxy "http://www-cache.gwdg.de:3128";' >> /etc/apt/apt.conf

# Update and install packages
apt-get -y update
apt-get -y install curl wget

# Install conda and check the md5 sum provided on the download site
export CONDA_DIR=/opt/conda
export PATH=$CONDA_DIR/bin:$PATH
# export CONDA_VERSION=23.3.1
# export MINICONDA_VERSION=py310_${CONDA_VERSION}-0

wget -O Miniforge3.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
/bin/bash Miniforge3.sh -f -b -p $CONDA_DIR
rm Miniforge3.sh
$CONDA_DIR/bin/conda init
/bin/bash $CONDA_DIR/etc/profile.d/conda.sh
/bin/bash $CONDA_DIR/etc/profile.d/mamba.sh

# cd /tmp && \
# wget https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
# echo "e65ad52d60452ce818869c3309d7964e *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh" | md5sum -c -
# /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR
# rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
# $CONDA_DIR/bin/conda config --system --prepend channels conda-forge
# $CONDA_DIR/bin/conda config --system --set auto_update_conda false
# $CONDA_DIR/bin/conda config --system --set show_channel_urls true
# $CONDA_DIR/bin/conda install --quiet --yes conda="${CONDA_VERSION}"
# conda update --all --quiet --yes
# conda clean --all -f --yes

# create env
echo "Creating conda environmentCreating conda environmentCreating conda environmentCreating conda environmentCreating conda environmentCreating conda environmentCreating conda environmentCreating conda environmentCreating conda environmentCreating conda environmentCreating conda environmentCreating conda environment"
ENV_NAME="exenv"
$CONDA_DIR/bin/conda create --name $ENV_NAME python=3.10 -y
$CONDA_DIR/bin/activate $ENV_NAME

# install packages
$CONDA_DIR/bin/conda install --quiet --yes \
    'notebook=6.5.4' \
    'jupyterhub=4.0.0' \
    'jupyterlab=4.0.0'

# $CONDA_DIR/bin/conda install pytorch==1.12.1 torchvision==0.13.1 torchaudio==0.12.1 cudatoolkit=11.3 -c pytorch -y







%environment
SHELL=/bin/bash
CONDA_DIR=${CONDA_DIR}
PATH=${PATH}:${LSF_BINDIR}:/cm/local/apps/cuda/libs/current/bin:${CONDA_DIR}/bin
HTTPS_PROXY="http://www-cache.gwdg.de:3128"
HTTP_PROXY="http://www-cache.gwdg.de:3128"
http_proxy="http://www-cache.gwdg.de:3128"
https_proxy="http://www-cache.gwdg.de:3128"